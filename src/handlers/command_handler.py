import logging
import json
import os
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes, ConversationHandler

from config.config import FOLDERS_FILE, is_admin, ADMIN_IDS, UPLOAD_DIR
from src.utils.session_utils import state_manager, SessionState
from src.utils.folder_navigation import FolderNavigator
from src.utils.access_control import access_control
from src.utils.message_utils import send_temp_message, send_processing_message, update_processing_message

logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∏–∞–ª–æ–≥–∞
CHOOSE_FOLDER = "CHOOSE_FOLDER"
CREATE_FOLDER = "CREATE_FOLDER"
ADMIN_MENU = "ADMIN_MENU"
ADD_USER = "ADD_USER"
REMOVE_USER = "REMOVE_USER"
SHOW_FOLDERS = "SHOW_FOLDERS"
ADD_FOLDER = "ADD_FOLDER"
REMOVE_FOLDER = "REMOVE_FOLDER"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–∞ –ø–∞–ø–æ–∫ (–±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ main.py)
folder_navigator = None
yadisk_helper = None

def init_handlers(navigator, yadisk):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    global folder_navigator, yadisk_helper
    folder_navigator = navigator
    yadisk_helper = yadisk

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start
    """
    user = update.effective_user
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} ({user.username or user.first_name}) –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
    
    await update.message.reply_html(
        f"–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}!\n\n"
        "–Ø –±–æ—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –≤—Å—Ç—Ä–µ—á –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.\n\n"
        "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/new - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≤—Å—Ç—Ä–µ—á—É\n"
        "/current - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –≤—Å—Ç—Ä–µ—á–µ\n"
        "/end - –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤—Å—Ç—Ä–µ—á—É\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É",
        reply_markup=ReplyKeyboardRemove()
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help
    """
    user_id = update.effective_user.id
    is_user_admin = is_admin(user_id)
    
    help_text = "–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞:\n\n" \
                "/new - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –≤—Å—Ç—Ä–µ—á—É –∏ –≤—ã–±—Ä–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å–µ–π\n" \
                "/current - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –≤—Å—Ç—Ä–µ—á–µ\n" \
                "/end - –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â—É—é –≤—Å—Ç—Ä–µ—á—É\n" \
                "/cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ\n"
    
    if is_user_admin:
        help_text += "\n–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:\n" \
                     "/admin - –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ (—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏)"
    
    await update.message.reply_text(
        help_text,
        reply_markup=ReplyKeyboardRemove()
    )

async def new_meeting(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """
    –ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –≤—Å—Ç—Ä–µ—á–∏
    """
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è
    if state_manager.has_active_session(user_id):
        await update.message.reply_text(
            "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞. –°–Ω–∞—á–∞–ª–∞ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –µ—ë –∫–æ–º–∞–Ω–¥–æ–π /end, "
            "–ø—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∏–Ω–∞—Ç—å –Ω–æ–≤—É—é."
        )
        return ConversationHandler.END
    
    # –ù–∞—á–∏–Ω–∞–µ–º –≤—ã–±–æ—Ä –ø–∞–ø–∫–∏
    await folder_navigator.show_folders(update, context)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    state_manager.set_state(user_id, CHOOSE_FOLDER)
    return CHOOSE_FOLDER

async def handle_folder_selection(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –ø–∞–ø–∫–∏ (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π)
    """
    user_id = update.effective_user.id
    user_text = update.message.text.strip()
    
    folders = context.user_data.get("folders", [])
    current_path = context.user_data.get("current_path", "/")
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫
    if user_text == "‚ùå –û—Ç–º–µ–Ω–∞":
        return await cancel(update, context)
    
    if user_text == "‚ûï –ù–æ–≤–∞—è –ø–∞–ø–∫–∞":
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –ø–∞–ø–∫–∏:",
            reply_markup=ReplyKeyboardRemove()
        )
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏
        context.user_data["folder_to_create_path"] = current_path
        state_manager.set_state(user_id, CREATE_FOLDER)
        return CREATE_FOLDER
    
    if user_text == "‚úÖ –í—ã–±—Ä–∞—Ç—å —ç—Ç—É –ø–∞–ø–∫—É":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å –≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–∫–∞—Ö
        if not folder_navigator.is_path_allowed(current_path) and current_path != "/":
            await update.message.reply_text(
                "–≠—Ç–∞ –ø–∞–ø–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –ø–∞–ø–∫—É.",
                reply_markup=ReplyKeyboardRemove()
            )
            await folder_navigator.show_folders(update, context)
            return CHOOSE_FOLDER
        
        # –í—ã–±–æ—Ä —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏ –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏
        folder_name = folder_navigator.get_folder_name(current_path)
        await create_meeting(update, context, current_path, folder_name)
        return ConversationHandler.END
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–∞–ø–∫–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (—Ç–µ–ø–µ—Ä—å –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å —ç–º–æ–¥–∑–∏ –∏ –∏–º–µ–Ω–∏ –ø–∞–ø–∫–∏)
    if user_text.startswith("üìÅ "):
        folder_name = user_text[2:].strip()  # –£–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –∏ –ø—Ä–æ–±–µ–ª
        
        # –ò—â–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –ø–∞–ø–∫—É –ø–æ –∏–º–µ–Ω–∏
        selected_folder = None
        for folder in folders:
            folder_display_name = folder.name if hasattr(folder, 'name') else folder.get('name', "")
            if folder_display_name == folder_name:
                selected_folder = folder
                break
        
        if selected_folder:
            # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ
            folder_path = selected_folder.path if hasattr(selected_folder, 'path') else selected_folder.get('path', '/')
            
            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
            await folder_navigator.show_folders(update, context, folder_path)
            return CHOOSE_FOLDER
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–∞–ø–∫–∏ —Å–Ω–æ–≤–∞
    await update.message.reply_text(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É –∏–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã.",
        reply_markup=ReplyKeyboardMarkup(
            folder_navigator.build_keyboard(folders),
            resize_keyboard=True
        )
    )
    return CHOOSE_FOLDER

async def create_folder(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –ø–∞–ø–∫—É –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—é
    """
    folder_name = update.message.text.strip()
    current_path = context.user_data.get("folder_to_create_path", "/")
    
    if "/" in folder_name or "\\" in folder_name:
        await update.message.reply_text(
            "–ù–∞–∑–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–∏–º–≤–æ–ª—ã / –∏–ª–∏ \\. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ:"
        )
        return CREATE_FOLDER
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –Ω–æ–≤–æ–π –ø–∞–ø–∫–∏
    new_folder_path = folder_navigator.join_paths(current_path, folder_name)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø—É—Ç—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
    if not folder_navigator.is_path_allowed(new_folder_path):
        await update.message.reply_text(
            "–ù–µ–ª—å–∑—è —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É –≤ —ç—Ç–æ–º –º–µ—Å—Ç–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥—É—é –ø–∞–ø–∫—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è."
        )
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É –ø–∞–ø–∫–∏
        await folder_navigator.show_folders(update, context)
        return CHOOSE_FOLDER
    
    try:
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
        await yadisk_helper.create_dir_async(new_folder_path)
        
        await update.message.reply_text(f"–ü–∞–ø–∫–∞ '{folder_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
        
        # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é, –ø–æ–∫–∞–∑—ã–≤–∞—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏
        await folder_navigator.show_folders(update, context, current_path)
        return CHOOSE_FOLDER
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–∞–ø–∫–∏: {e}", exc_info=True)
        await update.message.reply_text(
            f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É: {str(e)}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /cancel."
        )
        return CREATE_FOLDER

async def create_meeting(update: Update, context: ContextTypes.DEFAULT_TYPE, folder_path: str, folder_name: str) -> None:
    """
    –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –≤—Å—Ç—Ä–µ—á—É –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –ø–∞–ø–∫–µ
    """
    user_id = update.effective_user.id
    username = update.effective_user.username or update.effective_user.first_name
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    progress_message = await send_processing_message(update, context, "‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤—Å—Ç—Ä–µ—á–∏...")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    root_folder = folder_path.split("/")[1] if folder_path.startswith("/") and len(folder_path.split("/")) > 1 else ""
    session = SessionState(root_folder, folder_path, folder_name, user_id)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–µ—Å—Å–∏—é
    state_manager.set_session(user_id, session)
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥
    message = f"–ù–∞—á–∞–ª–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ –ø–∞–ø–∫–µ: {folder_path}"
    formatted_message = session.add_message(message, author=username)
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø–∞–ø–∫–∏
    state_manager.reset_state(user_id)
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        progress_message = await update_processing_message(progress_message, "‚è≥ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞...")
        
        # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
        header = f"=== –ü—Ä–æ—Ç–æ–∫–æ–ª –≤—Å—Ç—Ä–µ—á–∏ –æ—Ç {session.timestamp} ===\n\n"
        header += f"–ú–µ—Å—Ç–æ: {folder_path}\n\n"
        header += f"–£—á–∞—Å—Ç–Ω–∏–∫: {username} (ID: {user_id})\n\n"
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        full_text = f"{header}{formatted_message}\n"
        
        await yadisk_helper.create_text_file_async(full_text, session.txt_file_path)

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        await progress_message.delete()
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –≤—Å—Ç—Ä–µ—á–∏
        await update.message.reply_text(
            f"‚úÖ –í—Å—Ç—Ä–µ—á–∞ –Ω–∞—á–∞—Ç–∞!\n\n"
            f"üìÅ –ü–∞–ø–∫–∞: {folder_path}\n"
            f"üìù –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Ñ–∞–π–ª—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —ç—Ç–æ–π –ø–∞–ø–∫–µ.\n\n"
            f"–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /end",
            reply_markup=ReplyKeyboardRemove()
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await send_temp_message(update, "üìù –§–∞–π–ª –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ —Å–æ–∑–¥–∞–Ω", 3)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞: {e}", exc_info=True)
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        if 'progress_message' in locals():
            await progress_message.delete()
            
        await update.message.reply_text(
            "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª –ø—Ä–æ—Ç–æ–∫–æ–ª–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ. "
            "–í—Å—Ç—Ä–µ—á–∞ –Ω–∞—á–∞—Ç–∞, –Ω–æ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö."
        )

async def current_meeting(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –≤—Å—Ç—Ä–µ—á–µ
    """
    user_id = update.effective_user.id
    session = state_manager.get_session(user_id)
    
    if not session:
        await update.message.reply_text(
            "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤—Å—Ç—Ä–µ—á–∏. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /new"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É –ø–æ —Å–µ—Å—Å–∏–∏
    summary = session.get_session_summary()
    
    await update.message.reply_text(
        f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π –≤—Å—Ç—Ä–µ—á–µ:\n\n{summary}\n\n"
        f"–î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /end",
        reply_markup=ReplyKeyboardRemove()
    )

async def end_session(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ç–µ–∫—É—â—É—é –≤—Å—Ç—Ä–µ—á—É
    """
    user_id = update.effective_user.id
    session = state_manager.get_session(user_id)
    
    if not session:
        await update.message.reply_text(
            "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤—Å—Ç—Ä–µ—á–∏. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—É—é —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /new"
        )
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    progress_message = await send_processing_message(update, context, "‚è≥ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏...")
    
    username = update.effective_user.username or update.effective_user.first_name
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≤—Å—Ç—Ä–µ—á–∏
    session.add_message("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏", author=username)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É –ø–æ —Å–µ—Å—Å–∏–∏
    summary = session.get_session_summary()
    
    # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        progress_message = await update_processing_message(progress_message, "‚è≥ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞...")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
        footer = "\n\n=== –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏ ===\n"
        footer += f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {summary.split('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ')[1].split('\n')[0]}\n"
        footer += f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {summary.split('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: ')[1].split('\n')[0]}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–≤–µ—Ä—à–∞—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        await yadisk_helper.append_to_text_file_async(footer, session.txt_file_path)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        progress_message = await update_processing_message(progress_message, "‚è≥ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
        try:
            local_file_path = os.path.join(UPLOAD_DIR, os.path.basename(session.txt_file_path))
            yadisk_helper.disk.download(session.txt_file_path, local_file_path)
            
            with open(local_file_path, 'r', encoding='utf-8') as f:
                file_content = f.read()
            
            if os.path.exists(local_file_path):
                os.remove(local_file_path)
                
            # –ï—Å–ª–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ, –æ–±—Ä–µ–∑–∞–µ–º –µ–≥–æ
            if len(file_content) > 3000:
                file_content = file_content[:3000] + "...\n[–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π, –ø–æ–∫–∞–∑–∞–Ω–∞ —Ç–æ–ª—å–∫–æ —á–∞—Å—Ç—å]"
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞: {e}", exc_info=True)
            file_content = "[–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞]"
        
        # –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
        state_manager.clear_session(user_id)
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        await progress_message.delete()
        
        await update.message.reply_text(
            f"‚úÖ –í—Å—Ç—Ä–µ—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
            f"üìÑ –§–∞–π–ª: {session.txt_file_path}\n\n"
            f"–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ–∞–π–ª–∞:\n\n"
            f"{file_content}\n\n"
            f"–í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ.",
            reply_markup=ReplyKeyboardRemove()
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await send_temp_message(update, "üîÑ –°–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞", 3)
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –≤—Å—Ç—Ä–µ—á–∏: {e}", exc_info=True)
        
        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        if 'progress_message' in locals():
            await progress_message.delete()
            
        await update.message.reply_text(
            f"‚ùå –í—Å—Ç—Ä–µ—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –Ω–æ –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}",
            reply_markup=ReplyKeyboardRemove()
        )
        # –í—Å—ë —Ä–∞–≤–Ω–æ –æ—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
        state_manager.clear_session(user_id)

async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """
    –û—Ç–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ
    """
    user_id = update.effective_user.id
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    state_manager.reset_state(user_id)
    
    await update.message.reply_text(
        "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=ReplyKeyboardRemove()
    )
    
    return ConversationHandler.END

async def handle_session_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç callback-–∑–∞–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å —Å–µ—Å—Å–∏—è–º–∏
    """
    query = update.callback_query
    user_id = query.from_user.id
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback
    callback_data = query.data
    
    # –û—Ç–≤–µ—á–∞–µ–º, —á—Ç–æ–±—ã —É–±—Ä–∞—Ç—å —á–∞—Å—ã –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Telegram
    await query.answer()
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback_data
    if callback_data == "session_info":
        session = state_manager.get_session(user_id)
        if session:
            summary = session.get_session_summary()
            await query.edit_message_text(
                f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π –≤—Å—Ç—Ä–µ—á–µ:\n\n{summary}"
            )
        else:
            await query.edit_message_text(
                "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤—Å—Ç—Ä–µ—á–∏."
            )
    elif callback_data == "session_end":
        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–µ—Å—Å–∏—é
        session = state_manager.get_session(user_id)
        if session:
            summary = session.get_session_summary()
            state_manager.clear_session(user_id)
            await query.edit_message_text(
                f"–í—Å—Ç—Ä–µ—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n{summary}"
            )
        else:
            await query.edit_message_text(
                "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –≤—Å—Ç—Ä–µ—á–∏."
            )

async def admin_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /admin –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º
    """
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not is_admin(user_id):
        await update.message.reply_text(
            "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º.",
            reply_markup=ReplyKeyboardRemove()
        )
        return ConversationHandler.END
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    keyboard = [
        ["üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"],
        ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"],
        ["üìÅ –°–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫"],
        ["üìÅ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–∞–ø–∫—É", "üìÅ‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É"],
        ["üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–∫–∏"],
        ["‚ùå –í—ã—Ö–æ–¥"]
    ]
    
    await update.message.reply_text(
        "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞
    state_manager.set_state(user_id, ADMIN_MENU)
    return ADMIN_MENU

async def handle_admin_menu(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–º –º–µ–Ω—é
    """
    user_id = update.effective_user.id
    user_text = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if not is_admin(user_id):
        await update.message.reply_text(
            "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º.",
            reply_markup=ReplyKeyboardRemove()
        )
        return ConversationHandler.END
    
    if user_text == "üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π":
        return await show_allowed_users(update, context)
    
    elif user_text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å:",
            reply_markup=ReplyKeyboardRemove()
        )
        state_manager.set_state(user_id, ADD_USER)
        return ADD_USER
    
    elif user_text == "‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å:",
            reply_markup=ReplyKeyboardRemove()
        )
        state_manager.set_state(user_id, REMOVE_USER)
        return REMOVE_USER
    
    elif user_text == "üìÅ –°–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫":
        return await show_allowed_folders(update, context)
    
    elif user_text == "üìÅ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–∞–ø–∫—É":
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å (–Ω–∞–ø—Ä–∏–º–µ—Ä: /TD/–ò–º—è.–ü–∞–ø–∫–∏):",
            reply_markup=ReplyKeyboardRemove()
        )
        state_manager.set_state(user_id, ADD_FOLDER)
        return ADD_FOLDER
    
    elif user_text == "üìÅ‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É":
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö:",
            reply_markup=ReplyKeyboardRemove()
        )
        state_manager.set_state(user_id, REMOVE_FOLDER)
        return REMOVE_FOLDER
    
    elif user_text == "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–∫–∏":
        access_control.reload_users()
        folder_navigator.reload_allowed_folders()
        await update.message.reply_text(
            f"–°–ø–∏—Å–∫–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω—ã.\n"
            f"–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(access_control.allowed_users)}\n"
            f"–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–ø–æ–∫: {len(folder_navigator.allowed_folders)}",
            reply_markup=ReplyKeyboardRemove()
        )
        return await admin_command(update, context)
    
    elif user_text == "‚ùå –í—ã—Ö–æ–¥":
        await update.message.reply_text(
            "–í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
            reply_markup=ReplyKeyboardRemove()
        )
        state_manager.reset_state(user_id)
        return ConversationHandler.END
    
    else:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
        keyboard = [
            ["üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"],
            ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"],
            ["üìÅ –°–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫"],
            ["üìÅ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–∞–ø–∫—É", "üìÅ‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É"],
            ["üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–∫–∏"],
            ["‚ùå –í—ã—Ö–æ–¥"]
        ]
        
        await update.message.reply_text(
            "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏.",
            reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        )
        return ADMIN_MENU

async def show_allowed_users(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    """
    allowed_users = access_control.allowed_users
    admin_ids = ADMIN_IDS
    
    users_text = "–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n\n"
    
    if not allowed_users and not admin_ids:
        users_text += "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç. –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –¥–æ—Å—Ç—É–ø."
    else:
        # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω–æ–≤
        if admin_ids:
            users_text += "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã:\n"
            for admin_id in admin_ids:
                users_text += f"- {admin_id} (–∞–¥–º–∏–Ω)\n"
            users_text += "\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if allowed_users:
            users_text += "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n"
            for user_id in allowed_users:
                if user_id not in admin_ids:
                    users_text += f"- {user_id}\n"
        else:
            users_text += "–ù–µ—Ç –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–ø–∏—Å–∫–µ –¥–æ—Å—Ç—É–ø–∞.\n"
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    keyboard = [
        ["üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"],
        ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"],
        ["üìÅ –°–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫"],
        ["üìÅ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–∞–ø–∫—É", "üìÅ‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É"],
        ["üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–∫–∏"],
        ["‚ùå –í—ã—Ö–æ–¥"]
    ]
    
    await update.message.reply_text(
        users_text,
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )
    
    return ADMIN_MENU

async def add_user(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
    """
    user_text = update.message.text.strip()
    
    try:
        user_id = int(user_text)
        
        if access_control.add_allowed_user(user_id):
            await update.message.reply_text(
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö."
            )
        else:
            await update.message.reply_text(
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∂—É—Ä–Ω–∞–ª."
            )
    except ValueError:
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
        )
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
    return await admin_command(update, context)

async def remove_user(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """
    –£–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
    """
    user_text = update.message.text.strip()
    
    try:
        user_id = int(user_text)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—ã—Ç–∞–µ–º—Å—è –ª–∏ —É–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if user_id in ADMIN_IDS:
            await update.message.reply_text(
                f"–ù–µ–ª—å–∑—è —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}, —Ç–∞–∫ –∫–∞–∫ –æ–Ω —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º."
            )
        else:
            if access_control.remove_allowed_user(user_id):
                await update.message.reply_text(
                    f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID {user_id} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö."
                )
            else:
                await update.message.reply_text(
                    f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {user_id}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∂—É—Ä–Ω–∞–ª."
                )
    except ValueError:
        await update.message.reply_text(
            "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."
        )
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
    return await admin_command(update, context)

async def show_allowed_folders(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
    """
    allowed_folders = folder_navigator.allowed_folders
    
    folders_text = "–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–∞–ø–∫–∏:\n\n"
    
    if not allowed_folders:
        folders_text += "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç. –ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫."
    else:
        for i, folder in enumerate(allowed_folders, 1):
            folders_text += f"{i}. {folder}\n"
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    keyboard = [
        ["üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"],
        ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"],
        ["üìÅ –°–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫"],
        ["üìÅ‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–∞–ø–∫—É", "üìÅ‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–∞–ø–∫—É"],
        ["üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–∫–∏"],
        ["‚ùå –í—ã—Ö–æ–¥"]
    ]
    
    await update.message.reply_text(
        folders_text,
        reply_markup=ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    )
    
    return ADMIN_MENU

async def add_folder(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –ø–∞–ø–∫—É –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
    """
    folder_path = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –ø—É—Ç–∏
    if not folder_path.startswith('/'):
        folder_path = '/' + folder_path
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
        with open(FOLDERS_FILE, 'r', encoding='utf-8') as f:
            folders = json.load(f)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ª–∏ —É–∂–µ —ç—Ç–∞ –ø–∞–ø–∫–∞
        if folder_path in folders:
            await update.message.reply_text(
                f"–ü–∞–ø–∫–∞ '{folder_path}' —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö."
            )
        else:
            # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –ø–∞–ø–∫—É
            folders.append(folder_path)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
            with open(FOLDERS_FILE, 'w', encoding='utf-8') as f:
                json.dump(folders, f, indent=4)
                
            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–µ –ø–∞–ø–æ–∫
            folder_navigator.reload_allowed_folders()
            
            await update.message.reply_text(
                f"–ü–∞–ø–∫–∞ '{folder_path}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö.\n"
                f"–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫: {len(folders)}"
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–∞–ø–∫–∏: {e}", exc_info=True)
        await update.message.reply_text(
            f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–∞–ø–∫–∏: {str(e)}"
        )
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
    return await admin_command(update, context)

async def remove_folder(update: Update, context: ContextTypes.DEFAULT_TYPE) -> str:
    """
    –£–¥–∞–ª—è–µ—Ç –ø–∞–ø–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö
    """
    folder_path = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –ø—É—Ç–∏
    if not folder_path.startswith('/'):
        folder_path = '/' + folder_path
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫
        with open(FOLDERS_FILE, 'r', encoding='utf-8') as f:
            folders = json.load(f)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–∞–ø–∫–∞ –≤ —Å–ø–∏—Å–∫–µ
        if folder_path not in folders:
            await update.message.reply_text(
                f"–ü–∞–ø–∫–∞ '{folder_path}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö."
            )
        else:
            # –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É –∏–∑ —Å–ø–∏—Å–∫–∞
            folders.remove(folder_path)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫
            with open(FOLDERS_FILE, 'w', encoding='utf-8') as f:
                json.dump(folders, f, indent=4)
                
            # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–µ –ø–∞–ø–æ–∫
            folder_navigator.reload_allowed_folders()
            
            await update.message.reply_text(
                f"–ü–∞–ø–∫–∞ '{folder_path}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö.\n"
                f"–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–∞–ø–æ–∫: {len(folders)}"
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∞–ø–∫–∏: {e}", exc_info=True)
        await update.message.reply_text(
            f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–∞–ø–∫–∏: {str(e)}"
        )
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
    return await admin_command(update, context) 