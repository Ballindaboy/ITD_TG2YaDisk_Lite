import logging
import os
import tempfile
from telegram import Update
from telegram.ext import ContextTypes

from config.config import UPLOAD_DIR
from src.utils.session_utils import state_manager
from src.utils.speech_recognition import SpeechRecognizer
from src.utils.message_utils import send_temp_message, send_processing_message, update_processing_message

logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç–µ–ª—è —Ä–µ—á–∏
speech_recognizer = SpeechRecognizer(language="ru-RU")

async def handle_voice(update: Update, context: ContextTypes.DEFAULT_TYPE, yadisk_helper) -> None:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —Ä–µ—á—å
    """
    user_id = update.effective_user.id
    session = state_manager.get_session(user_id)
    
    if not session:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –Ω–∞—á–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /new")
        return
    
    try:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        progress_message = await send_processing_message(update, context, "‚è≥ –ü–æ–ª—É—á–µ–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        voice_file = await update.message.voice.get_file()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        progress_message = await update_processing_message(progress_message, "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...")
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è OGG —Ñ–∞–π–ª–∞
        os.makedirs(UPLOAD_DIR, exist_ok=True)
        ogg_file_path = os.path.join(UPLOAD_DIR, f"voice_{session.timestamp}_{voice_file.file_unique_id}.ogg")
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º ogg —Ñ–∞–π–ª
        await voice_file.download_to_drive(ogg_file_path)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ
        progress_message = await update_processing_message(progress_message, "‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫...")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç—å –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        yadisk_voice_path = f"{session.folder_path}/{session.file_prefix}_{voice_file.file_unique_id}.ogg"
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
        await yadisk_helper.upload_file_async(ogg_file_path, yadisk_voice_path)
        
        # –†–∞—Å–ø–æ–∑–Ω–∞–µ–º —Ä–µ—á—å
        progress_message = await update_processing_message(progress_message, "üîä –†–∞—Å–ø–æ–∑–Ω–∞—é —Ä–µ—á—å...")
        text = await speech_recognizer.recognize_voice(ogg_file_path)
        
        username = update.effective_user.username or update.effective_user.first_name
        
        if text:
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥
            formatted_message = session.add_message(f"–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ({voice_file.file_unique_id}): {text}", author=username)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
            await yadisk_helper.append_to_text_file_async(formatted_message + "\n", session.txt_file_path)
            
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            await progress_message.delete()
            await update.message.reply_text(f"‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\n\n{text}")

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await send_temp_message(update, "üìù –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –ø—Ä–æ—Ç–æ–∫–æ–ª–µ", 3)
        else:
            # –ï—Å–ª–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –æ–± —ç—Ç–æ–º
            formatted_message = session.add_message(f"–ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ({voice_file.file_unique_id}): [–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å]", author=username)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
            await yadisk_helper.append_to_text_file_async(formatted_message + "\n", session.txt_file_path)
            
            # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            await progress_message.delete()
            await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å. –í–æ–∑–º–æ–∂–Ω–æ, –∑–∞–ø–∏—Å—å —Å–ª–∏—à–∫–æ–º —Ç–∏—Ö–∞—è –∏–ª–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —à—É–º.")
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        if os.path.exists(ogg_file_path):
            os.remove(ogg_file_path)
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}", exc_info=True)
        await update.message.reply_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {str(e)}") 